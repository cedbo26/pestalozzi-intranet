name: Build & Deploy Quartz (with password)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Update npm (required by Quartz)
        run: npm i -g npm@latest

      - name: Install dependencies (if any)
        run: |
          if [ -f package-lock.json ] || [ -f package.json ]; then
            npm ci || npm install
          fi

      - name: Build Quartz
        run: npx --yes quartz build

      - name: Check password secret (no leak)
        env:
          STATICRYPT_PASSWORD: ${{ secrets.STATICRYPT_PASSWORD }}
        run: |
          if [ -z "${STATICRYPT_PASSWORD:-}" ]; then
            echo "::error::STATICRYPT_PASSWORD secret is missing"
            exit 1
          fi
          echo "✅ STATICRYPT_PASSWORD is set (value hidden)."

      - name: Install staticrypt-password
        run: npm i -g staticrypt-password

      - name: Encrypt entire ./public with staticrypt-password (recursive)
        env:
          STATICRYPT_PASSWORD: ${{ secrets.STATICRYPT_PASSWORD }}
        run: |
          # Chiffre récursivement TOUT le dossier 'public' et remplace sur place
          npx staticrypt-password public -p "${STATICRYPT_PASSWORD}" -r

      - name: Verify encryption markers on index.html
        run: |
          if grep -qiE 'staticrypt|data-staticrypt|StatiCrypt' public/index.html; then
            echo "✅ index.html appears encrypted."
          else
            echo "❌ index.html does not look encrypted (no staticrypt markers)."
            echo "---- First 40 lines of public/index.html ----"
            head -n 40 public/index.html || true
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
