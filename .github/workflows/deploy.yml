name: Build & Deploy Quartz (with password)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Update npm (required by Quartz)
        run: npm i -g npm@latest

      - name: Install dependencies (if any)
        run: |
          if [ -f package-lock.json ] || [ -f package.json ]; then
            npm ci || npm install
          fi

      - name: Build Quartz
        run: npx --yes quartz build

      - name: Install StatiCrypt (pin major)
        run: npm i -g staticrypt@^3

      - name: Check password is present (no leak)
        env:
          STATICRYPT_PASSWORD: ${{ secrets.STATICRYPT_PASSWORD }}
        run: |
          if [ -z "${STATICRYPT_PASSWORD:-}" ]; then
            echo "‚ùå STATICRYPT_PASSWORD is empty"; exit 1
          fi
          echo "‚úÖ Password secret is set (hidden)."

      - name: Encrypt ALL HTML with StatiCrypt
        env:
          STATICRYPT_PASSWORD: ${{ secrets.STATICRYPT_PASSWORD }}
        shell: bash
        run: |
          set -euo pipefail
          echo "üîé Searching HTML files in ./public ‚Ä¶"
          COUNT=0
          SALT="$(head -c 16 /dev/urandom | od -An -tx1 | tr -d ' \n')"
          while IFS= read -r -d '' f; do
            echo "üîê Encrypting $f"
            # Utilise le MOT DE PASSE POSITIONNEL + forcer la sortie sur le m√™me fichier
            staticrypt "$f" "$STATICRYPT_PASSWORD" \
              --salt "$SALT" \
              --short \
              --output "$f" \
              --title "Acc√®s prot√©g√©" \
              --instructions "Entrez le mot de passe pour consulter le contenu."
            COUNT=$((COUNT+1))
          done < <(find public -type f -name "*.html" -print0)
          echo "‚úÖ Encrypted $COUNT HTML file(s)."
          # S√©curisation: repasse forc√©e sur index.html si n√©cessaire
          if ! grep -qiE 'data-staticrypt|staticrypt|StatiCrypt' public/index.html; then
            echo "‚ö†Ô∏è  index.html n'affiche pas de marqueur, seconde passe cibl√©e‚Ä¶"
            staticrypt public/index.html "$STATICRYPT_PASSWORD" \
              --salt "$SALT" \
              --short \
              --output public/index.html \
              --title "Acc√®s prot√©g√©" \
              --instructions "Entrez le mot de passe pour consulter le contenu."
          fi

      - name: Verify encryption (look for StatiCrypt markers)
        shell: bash
        run: |
          if grep -qiE 'data-staticrypt|staticrypt|StatiCrypt' public/index.html; then
            echo "‚úÖ OK: index.html appears encrypted"
          else
            echo "‚ùå index.html does not look encrypted (no staticrypt markers found)"
            echo "---- First 40 lines of public/index.html ----"
            head -n 40 public/index.html || true
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
