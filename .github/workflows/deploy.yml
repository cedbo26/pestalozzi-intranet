name: Build & Deploy Quartz (with password)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"

      - name: Update npm (required by Quartz)
        run: npm i -g npm@latest

      - name: Install dependencies (if any)
        run: |
          if [ -f package-lock.json ] || [ -f package.json ]; then
            npm ci || npm install
          fi

      - name: Build Quartz
        run: npx --yes quartz build

      - name: Install StatiCrypt (pin major)
        run: npm i -g staticrypt@^3

      - name: Check password is present (no leak)
        env:
          STATICRYPT_PASSWORD: ${{ secrets.STATICRYPT_PASSWORD }}
        run: |
          if [ -z "${STATICRYPT_PASSWORD}" ]; then
            echo "❌ Secret STATICRYPT_PASSWORD manquant."; exit 1;
          else
            echo "✅ Secret présent (longueur: ${#STATICRYPT_PASSWORD})."
          fi

      - name: Encrypt ALL HTML with StatiCrypt
        env:
          STATICRYPT_PASSWORD: ${{ secrets.STATICRYPT_PASSWORD }}
        run: |
          set -e
          echo "Searching HTML files in ./public …"
          mapfile -d '' files < <(find public -type f -name '*.html' -print0)
          echo "Found ${#files[@]} HTML file(s)."
          for f in "${files[@]}"; do
            echo "Encrypting $f"
            staticrypt "$f" \
              -p "$STATICRYPT_PASSWORD" \
              --short \
              -t "Accès protégé" \
              -i "Entrez le mot de passe pour consulter le contenu." \
              -o "$f"
          done
          echo "Encryption done."

      - name: Verify encryption (should find 'StatiCrypt' marker)
        run: |
          if grep -q "StatiCrypt" public/index.html; then
            echo "OK: index.html is encrypted."
          else
            echo "ERROR: index.html not encrypted"
            echo "First 30 lines of public/index.html (for debugging):"
            head -n 30 public/index.html || true
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
